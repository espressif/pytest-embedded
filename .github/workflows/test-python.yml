name: Test Python Packages

on:
  pull_request:
    paths:
      - '**.py'
      - .github/workflows/test-python.yml
      - '!docs/**'
  push:
    branches: [ main ]

# cancel jobs if new commit pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-python:
    timeout-minutes: 40
    strategy:
      matrix:
        include:
          - python-version: '3.7'
            arch: 'ARM'
          - python-version: '3.12'
            arch: 'X64'
      fail-fast: false
    runs-on:
      - self-hosted
      - multiboard
      - ${{ matrix.arch }}
    container:
      image: python:${{ matrix.python-version }}
      options: --privileged
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          apt update && apt install -y socat zip
          pip install -U pip
          export PIP_EXTRA_INDEX_URL="https://dl.espressif.com/pypi"
          pip install cryptography --prefer-binary
          pip install -r requirements.txt
          bash foreach.sh install
      - name: Check ports
        run: ls -la /dev/ttyUSB*
      - name: Download QEMU
        if: ${{ matrix.arch  == 'x64' }}
        run: |
          QEMU_TAG=esp-develop-8.1.3-20231206
          QEMU_DIST_XTENSA=qemu-xtensa-softmmu-esp_develop_8.1.3_20231206-x86_64-linux-gnu.tar.xz
          QEMU_DIST_RISCV=qemu-riscv32-softmmu-esp_develop_8.1.3_20231206-x86_64-linux-gnu.tar.xz

          wget --no-verbose https://github.com/espressif/qemu/releases/download/${QEMU_TAG}/${QEMU_DIST_RISCV} \
          && tar -xf ${QEMU_DIST_RISCV} -C /opt \
          && rm ${QEMU_DIST_RISCV}

          wget --no-verbose https://github.com/espressif/qemu/releases/download/${QEMU_TAG}/${QEMU_DIST_XTENSA} \
          && tar -xf ${QEMU_DIST_XTENSA} -C /opt \
          && rm ${QEMU_DIST_XTENSA}

          apt-get update && apt-get install -y -q \
              libpixman-1-0 \
              libnuma1 \
              libglib2.0-0 \
              libslirp0 \
              libsdl2-2.0-0

      - name: Run Tests with coverage
        run: |
          if ${{ matrix.arch  == 'x64' }}; then
            PATH=/opt/qemu/bin:${PATH}
          fi

          pytest \
            --junitxml=pytest.xml \
            --cov-report=term-missing \
            --cov=pytest_embedded \
            --cov=pytest_embedded_arduino \
            --cov=pytest_embedded_idf \
            --cov=pytest_embedded_jtag \
            --cov=pytest_embedded_qemu \
            --cov=pytest_embedded_serial \
            --cov=pytest_embedded_serial_esp
      - name: Zip log files
        if: failure()
        run: |
          zip -r logs.zip /tmp/pytest-embedded
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: logs
          path: logs.zip
